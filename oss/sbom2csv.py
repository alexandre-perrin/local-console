#!/usr/bin/env python
"""
This script converts the SBOM file generated by cyclonedx-py into csv format.
"""
import argparse
import csv
import json


def get_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--python", required=True, help="Path file generated by cyclonedx-py."
    )
    parser.add_argument(
        "--external", required=True, help="Path to external dependencies."
    )
    parser.add_argument(
        "--output", required=True, help="Path to store the generated CSV output."
    )
    return parser.parse_args()


def main() -> None:
    args = get_args()

    with open(args.python) as f:
        data = json.load(f)

    with open(args.external) as f:
        external = json.load(f)

    data["components"].extend(external["components"])

    data_file = open(args.output, "w", newline="")
    csv_writer = csv.writer(data_file, delimiter=",")
    # Header
    csv_writer.writerow(["name", "version", "license"])

    for x in data["components"]:
        licenses_dict = x.get("licenses", {})
        licenses = []
        for lic in licenses_dict:
            if "license" in lic:
                lic = lic["license"]
                if "id" in lic:
                    licenses.append(lic["id"])
                elif "name" in lic:
                    licenses.append(lic["name"])
                else:
                    raise Exception(f"Unknown format: {lic}")
            elif "expression" in lic:
                licenses.append(lic["expression"])
            else:
                raise Exception(f"Unknown format: {lic}")

        licenses_str = " ".join(
            [lic.replace(",", "").replace(";", "") for lic in licenses]
        )

        row = x["name"], x["version"], licenses_str
        csv_writer.writerow(row)

    data_file.close()


if __name__ == "__main__":
    main()
