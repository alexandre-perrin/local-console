name: windows-installer

on:
  workflow_call:

jobs:
  build:
    name: Build
    runs-on: windows-latest
    env:
      ARTIFACT_NAME: windows-installer
    outputs:
      artifact: ${{ env.ARTIFACT_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build the Inno Setup Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.4
        with:
          path: ./inno-setup.iss
          options: /O+

      - name: Upload the Inno Setup Installer
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ./Output/offline-tool-setup.exe

  test:
    name: Test
    runs-on: windows-latest
    needs: build
    steps:
      - name: Download installer
        uses: actions/download-artifact@v4
        with:
          name: windows-installer

      - name: Set log paths
        shell: pwsh
        run: |
          $LogsDir = Join-Path $env:TEMP "cilogs"
          mkdir $LogsDir
          $LogExe = Join-Path $LogsDir "exe-installer"
          $LogScript = Join-Path $LogsDir "script"
          echo "LOG_EXE=$LogExe" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "LOG_PS1=$LogScript" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Perform installation
        shell: pwsh
        run: Start-Process -FilePath ".\offline-tool-setup.exe" -ArgumentList "/LOG=`"$env:LOG_EXE`" /NOCANCEL /SILENT" -Wait

      - name: Check installer logs
        shell: pwsh
        run: cat $env:LOG_EXE

      - name: Check script logs
        shell: pwsh
        run: cat $env:LOG_PS1

      - name: Test
        shell: pwsh
        run: |
          $ScriptsDir = Join-Path $env:APPDATA "OfflineTool" `
                      | Join-Path -ChildPath "virtualenv" `
                      | Join-Path -ChildPath "Scripts"
          ls -l $ScriptsDir
          $SourceExe = Join-Path $ScriptsDir "wedge-cli.exe"
          Invoke-Expression "$SourceExe config get"
