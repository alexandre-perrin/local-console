---
name: CI

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [main]

env:
  PYTHON_VERSION: '3.11'

jobs:
  test:
    name: Test (E2E for ${{ matrix.ows-version }} with${{ matrix.with-tls == false && 'out' || '' }} TLS)
    runs-on: [self-hosted, X64]
    container: ubuntu:22.04
    timeout-minutes: 20
    strategy:
      fail-fast: true
      matrix:
        with-tls: [true, false]
        ows-version: ["EVP1", "EVP2-TB"]
        exclude:
          # we don't need to run TLS test more than once
          - ows-version: "EVP1"
            with-tls: true
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install test requirements
      run: |
        apt-get -y update && apt install -y wget curl gcc python3-dev make cmake git software-properties-common mosquitto libnss-wrapper
    - name: Download and install agent
      run: |
        wget ${{ secrets.WEDGE_AGENT_SAS_URL }} -k -O wedge-agent_amd64.deb
        apt install -y libc6
        apt install -y ./wedge-agent_amd64.deb
        cp /usr/bin/wedge_agent /usr/bin/evp_agent
    - name: Download install wasi-sdk
      run: |
        curl -sL https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/wasi-sdk-20.0-linux.tar.gz | tar zxvf - -C /tmp && \
            mv /tmp/wasi-sdk-20.0 /opt/wasi-sdk
    - name: Install wedge-cli
      run: |
        pip install wedge-cli/
        pip install -r tests/requirements.txt
    - name: Run Unit Test
      id: unit-test
      # The unit test suites test E2E independently of the environment,
      # so we don't need to run them more than once.
      if: ${{ matrix.with-tls }}
      run: |
        python -m pytest tests --cov --cov-report=xml --cov-report=html --hypothesis-seed=42

    - name: Create unprivileged user
      # It seems that mosquitto will not load a self-signed CA
      # as root, so it needs to be launched unprivileged.
      # However...
      run: |
        useradd -m testbot
        echo 'testbot:password' | chpasswd

    - name: Chown samples directory
      # ... in order for the module build to succeed, the
      # samples directory must be accessible by the new user
      run: chown -R testbot samples/

    - name: Run E2E with${{ matrix.with-tls == false && 'out' || '' }} TLS (for ${{ matrix.ows-version }})
      id: e2e
      run: |
        runuser -u testbot -- python tests/e2e.py ${{ matrix.with-tls == true && '--with-tls' || '' }} -s ${{ matrix.ows-version }}

  pre-commit:
    name: Pre-commit
    runs-on: [self-hosted, X64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Run Pre-commit
        uses: pre-commit/action@v3.0.1

  publish:
    name: Publish and tag
    runs-on: [self-hosted, X64]
    needs: [pre-commit, test]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Extract version
      run: |
            package_version=$(awk -F' = ' '/^version/ {print $2}' wedge-cli/setup.cfg | tr -d "'")
            echo "PACKAGE_VERSION=$package_version" >> "$GITHUB_ENV"
    - name: Check
      uses: mukunku/tag-exists-action@v1.6.0
      id: check-tag
      with:
        tag: v${{ env.PACKAGE_VERSION }}
    - name: Tag new version
      uses: tvdias/github-tagger@v0.0.2
      if: steps.check-tag.outputs.exists == 'false'
      with:
        repo-token: ${{ secrets.TOKEN_PACKAGES }}
        tag: v${{ env.PACKAGE_VERSION }}
    - name: Build wheel
      if: steps.check-tag.outputs.exists == 'false'
      run: |
        python3 -m pip install build
        python3 -m build wedge-cli/ --wheel
    - name: Upload to AZ
      uses: bacongobbler/azure-blob-storage-upload@main
      if: steps.check-tag.outputs.exists == 'false'
      with:
        source_dir: wedge-cli/dist
        container_name: main
        connection_string: ${{ secrets.CEDATA_CONNECTION_STRING }}
        extra_args: '--pattern *.whl'
        overwrite: 'true'
