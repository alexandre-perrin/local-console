---
name: CI

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [main]

env:
  PYTHON_VERSION: '3.11'

jobs:
  test:
    name: Test
    runs-on: [self-hosted, X64]
    container: ubuntu:22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install test requirements
      run: |
        apt-get -y update && apt install -y wget curl gcc python3-dev make cmake git software-properties-common
    - name: Download and install agent
      run: |
        wget ${{  secrets.WEDGE_AGENT_SAS_URL  }} -k -O wedge-agent_amd64.deb
        apt install -y libc6
        apt install -y ./wedge-agent_amd64.deb
        cp /usr/bin/wedge_agent /usr/bin/evp_agent
    - name: Download install wasi-sdk
      run: |
        curl -sL https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/wasi-sdk-20.0-linux.tar.gz | tar zxvf - -C /tmp && \
            mv /tmp/wasi-sdk-20.0 /opt/wasi-sdk
    - name: Install wedge-cli
      run: |
        pip install wedge-cli/
    - name: Start Mosquitto
      run : |
        apt-get install -y mosquitto
        mosquitto -d -c .devcontainer/mosquitto.conf
    - name: Run E2E
      id: e2e
      run: |
        python .github/e2e.py
  pre-commit:
    name: Pre-commit
    runs-on: [self-hosted, X64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Run Pre-commit
        uses: pre-commit/action@v3.0.0
  publish:
    name: Publish and tag
    runs-on: [self-hosted, X64]
    needs: [pre-commit, test]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Extract version
      run: |
            package_version=$(awk -F' = ' '/^version/ {print $2}' wedge-cli/setup.cfg | tr -d "'")
            echo "PACKAGE_VERSION=$package_version" >> "$GITHUB_ENV"
    - name: Check
      uses: mukunku/tag-exists-action@v1.4.0
      id: check-tag
      with:
        tag: v${{ env.PACKAGE_VERSION }}
    - name: Tag new version
      uses: tvdias/github-tagger@v0.0.2
      if: ${{ steps.check-tag.outputs.exists }} == 'false'
      with:
        repo-token: ${{ secrets.TOKEN_PACKAGES }}
        tag: v${{ env.PACKAGE_VERSION }}
    - name: Build wheel
      id: build_wheel
      run: |
        python3 -m pip install build
        python3 -m build wedge-cli/ --wheel
    - name: Upload to AZ
      uses: bacongobbler/azure-blob-storage-upload@main
      with:
        source_dir: wedge-cli/dist
        container_name: main
        connection_string: ${{ secrets.CEDATA_CONNECTION_STRING }}
        extra_args: '--pattern *.whl'
        overwrite: 'true'
